What happens when you initialize a repository? Why do you need to do it?

	.git folder exists now, git version control can be used not commit changes made.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	staging area contains files that shoud be added from working directory to the repository,
	it allows you to skip files that are not useful for other developers and are used only by you,
	or those are local debugging or logging files, which are commonly not useful to commmit.

How can you use the staging area to make sure you have one commit per logical
change?

	By adding files to the "staging area" we can commit changes to the repository in portions
	of logical changes, howewer many more changes to more files have been made.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	Branches allow you to make some interesting versions of your product,
	possibility to change between them allows you to easily switch between different versions,
	and test them out, without breaking main master product, with possibility to inherit all fixes,
	and features from master branch.

How do the diagrams help you visualize the branch structure?

	they help you to see which branches at what stage were created and precisely for which purpose.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

	by merging branches we get errors fixed, features added, everything in a safe way

What are the pros and cons of Git’s automatic merging vs. always doing merges
manually?

	at this moment, only human is able to investigate of what should be kept, changed or deleted,
	from precious code, so lets always do it by hand ;)